version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: backend # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - '8080:8080' # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/prod
      SPRING_DATASOURCE_USERNAME: prod
      SPRING_DATASOURCE_PASSWORD: prod
      SPRING_RABBITMQ_HOST: rabbitmq
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Frontend Service
  app-client:
    build:
      context: frontend # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    ports:
      - '9090:80'
    restart: on-failure
    depends_on:
      - app-server
    networks:
      - backend

  # Database Service
  db:
    image: postgres
    ports:
      - '5432:5432'
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: prod
      POSTGRES_DB: prod
      POSTGRES_USER: prod
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:management
    restart: on-failure
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - backend

# Networks to be created to facilitate communication between containers
networks:
  backend:
